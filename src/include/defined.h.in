#ifndef DEFINED_HPP
#define DEFINED_HPP

#include <list>
#include <vector>
#include <array>
#include <queue>
#include <unordered_set>
#include <unordered_map>
#include <set> 
#include <map>

#include <algorithm>

#include <string>

#include <iostream>
#include <fstream>
#include <sstream>

#include <memory>
#include <limits>
#include <utility>
#include <tuple>

#include <functional>

#include <cassert>

#define MGRA_VERSION_MAJOR @MGRA_VERSION_MAJOR@
#define MGRA_VERSION_MINOR @MGRA_VERSION_MINOR@
#define MGRA_VERSION_PATCH @MGRA_VERSION_PATCH@

typedef std::string vertex_t;
vertex_t const Infty = "oo"; 

#include "utility/config_singl.hpp"
#include "utility/property.hpp"
#include "utility/sym_multihashmap.hpp"
#include "utility/equivalence.hpp"

#include "logger/logger.hpp"

#include "structures/mcolor.hpp"
#include "structures/mularcs.hpp"
#include "structures/genome.hpp"
#include "structures/Tree.h"

namespace reader { 
  inline std::string trim(std::string s, std::string const & drop = " \t\r\n") {
    s = s.erase(s.find_last_not_of(drop) + 1);
    return s.erase(0, s.find_first_not_of(drop));
  }
} 

#endif


