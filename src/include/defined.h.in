#ifndef DEFINED_HPP
#define DEFINED_HPP

#include <list>
#include <vector>
#include <array>
#include <queue>
#include <unordered_set>
#include <unordered_map>
#include <set> 
#include <map>

#include <algorithm>

#include <string>

#include <iostream>
#include <fstream>
#include <sstream>

#include <memory>
#include <limits>
#include <utility>
#include <tuple>

#include <functional>

#include <cassert>

#define MGRA_VERSION_MAJOR @MGRA_VERSION_MAJOR@
#define MGRA_VERSION_MINOR @MGRA_VERSION_MINOR@
#define MGRA_VERSION_PATCH @MGRA_VERSION_PATCH@

#include <boost/algorithm/string.hpp>

using vertex_t = std::string;
vertex_t const Infty = "oo"; 

#include "utility/config_singl.hpp"
#include "utility/property.hpp"
#include "utility/sym_multihashmap.hpp"
#include "utility/equivalence.hpp"

#include "logger/logger.hpp"

#include "structures/tree.hpp"
#include "structures/mcolor.hpp"
#include "structures/mularcs.hpp"
#include "structures/genome.hpp"

enum build_type { default_algo, wgd_algo, assembly_algo, target_algo };  

namespace algo { 

enum kind_stage {balance_k,
                 simple_path_k,
				 four_cycles_k,
				 fair_edge_k,
                 clone_k, 
                 fair_clone_edge_k, 
                 components_k, 
                 change_canform_k, 
                 bruteforce_k, 
                 blossomv_k, 
                 completion_k
                }; 

} 
#endif


